package com.ahndwon.sectionrecyclerviewexample

import com.ahndwon.sectionrecyclerviewexample.items.*

object Dummies {
//    val items = arrayListOf(
//        HeaderOne("HEADER - 1"),
//        ChildOne("this is body - 1"),
//        ChildOne("this is body - 2"),
//        ChildOne("this is body - 3"),
//        ChildOne("this is body - 4"),
//        HeaderTwo("HEADER - 2"),
//        ChildTwo("this is body - 1"),
//        ChildTwo("this is body - 1"),
//        ChildTwo("this is body - 1"),
//        ChildTwo("this is body - 1"),
//        ChildTwo("this is body - 1"),
//        ChildTwo("this is body - 1"),
//        ChildTwo("this is body - 1"),
//        ChildTwo("this is body - 1"),
//        HeaderOne("HEADER - 3"),
//        ChildOne("this is body - 1"),
//        ChildOne("this is body - 2"),
//        ChildOne("this is body - 3"),
//        ChildOne("this is body - 3"),
//        HeaderTwo("HEADER - 4"),
//        ChildTwo("this is body - 1"),
//        ChildTwo("this is body - 2"),
//        ChildTwo("this is body - 3"),
//        ChildTwo("this is body - 4"),
//        ChildTwo("this is body - 4"),
//        ChildTwo("this is body - 4"),
//        HeaderOne("HEADER - 5"),
//        ChildOne("this is body - 1"),
//        ChildOne("this is body - 1"),
//        ChildOne("this is body - 1"),
//        ChildOne("this is body - 1"),
//        ChildOne("this is body - 1"),
//        ChildOne("this is body - 1"),
//        ChildOne("this is body - 1"),
//        ChildOne("this is body - 1"),
//        ChildOne("this is body - 1"),
//        ChildOne("this is body - 1"),
//        ChildOne("this is body - 1"),
//        ChildOne("this is body - 1"),
//        ChildOne("this is body - 1")
//    )

    val items = arrayListOf(
        HeaderOne("HEADER - 1"),
        ChildOne(ListItem("1", "test", 0)),
        ChildOne(ListItem("1", "test", 1)),
        ChildOne(ListItem("1", "test", 2)),
        ChildOne(ListItem("1", "test", 3)),
        ChildOne(ListItem("1", "test", 4)),
        HeaderTwo("HEADER - 2"),
        ChildTwo(ListItem("2", "test2", 5)),
        ChildTwo(ListItem("2", "test2", 6)),
        ChildTwo(ListItem("2", "test2", 7)),
        ChildTwo(ListItem("2", "test2", 8)),
        ChildTwo(ListItem("2", "test2", 9)),
        ChildTwo(ListItem("2", "test2", 10)),
        ChildTwo(ListItem("2", "test2", 11)),
        ChildTwo(ListItem("2", "test2", 12)),
        ChildTwo(ListItem("2", "test2", 13)),
        HeaderOne("HEADER - 3"),
        ChildOne(ListItem("3", "test", 14)),
        ChildOne(ListItem("3", "test", 15)),
        ChildOne(ListItem("3", "test", 16)),
        ChildOne(ListItem("3", "test", 17)),
        ChildOne(ListItem("3", "test", 18)),
        HeaderTwo("HEADER - 4"),
        ChildTwo(ListItem("4", "test", 19)),
        ChildTwo(ListItem("4", "test", 20)),
        ChildTwo(ListItem("4", "test", 21)),
        ChildTwo(ListItem("4", "test", 22)),
        ChildTwo(ListItem("4", "test", 23)),
        HeaderOne("HEADER - 5"),
        ChildOne(ListItem("5", "test", 24)),
        ChildOne(ListItem("5", "test", 25)),
        ChildOne(ListItem("5", "test", 26)),
        ChildOne(ListItem("5", "test", 27)),
        ChildOne(ListItem("5", "test", 28)),
        ChildOne(ListItem("5", "test", 29)),
        ChildOne(ListItem("5", "test", 30)),
        ChildOne(ListItem("5", "test", 31)),
        ChildOne(ListItem("5", "test", 32)),
        ChildOne(ListItem("5", "test", 33)),
        ChildOne(ListItem("5", "test", 34))
    )
}